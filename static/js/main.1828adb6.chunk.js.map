{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","contactForm","field","label","input","type","pattern","title","required","onChange","btn","Component","Filter","ContactListItem","onDelete","container","marker","tel","href","onClick","ContactList","contacts","onDeleteContact","list","map","id","item","App","filter","changeFilter","addContact","find","contact","alert","uuidv4","deleteContact","contactId","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1828adb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Snh_\",\"item\":\"ContactList_item__2DW7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3OA_Z\",\"field\":\"ContactForm_field__2F5SF\",\"label\":\"ContactForm_label__23qLj\",\"input\":\"ContactForm_input__3wdnZ\",\"btn\":\"ContactForm_btn__2Kh20\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\n        <label className={s.field}>\n          <span className={s.label}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.field}>\n          <span className={s.label}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.field}>\n      <span className={s.label}>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nexport default function ContactListItem({ name, number, onDelete }) {\n  return (\n    <div className={s.container}>\n      <span className={s.marker}></span>\n      <p className={s.name}>{`${name}:`}</p>\n      <a className={s.tel} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button type=\"button\" className={s.btn} onClick={onDelete}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactListItem from '../ContactListItem';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactListItem\n            name={name}\n            number={number}\n            onDelete={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    const isAlreadyInContacts = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n\n    if (isAlreadyInContacts) return alert(`${name} is already in contacts.`);\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1 className=\"phonebookTitle\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__cwia5\",\"marker\":\"ContactListItem_marker__16AcW\",\"name\":\"ContactListItem_name__BkHzE\",\"tel\":\"ContactListItem_tel__2XTST\",\"btn\":\"ContactListItem_btn__1IL72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__265Rj\",\"label\":\"Filter_label__3i1WF\",\"input\":\"Filter_input__24Sjv\"};"],"sourceRoot":""}